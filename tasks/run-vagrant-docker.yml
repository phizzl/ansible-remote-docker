---
- name: Adding keys to hosts authorized_keys
  shell: "echo \"{{ item }}\" >> ~/.ssh/authorized_keys"
  loop: "{{ vd.authorized_keys }}"
  when: vd.authorized_keys is defined
  become_user: "{{ vd_vagrant_user }}"

- name: Create destination directory
  file:
    path: "{{ vd.dest }}"
    state: directory
    owner: "{{ vd_vagrant_user }}"

- name: Checkout [vd] docker-compose setups
  git:
    repo: "{{ vd.repo }}"
    dest: "{{ vd.dest }}/src"
    accept_hostkey: "{{ vd.accept_hostkey| default('yes') }}"
    version: "{{ vd.version | default('HEAD') }}"
    key_file: "{{ vd.key_file |default('') }}"
  when: vd.repo is defined and vd.repo != ""
  become_user: "{{ vd_vagrant_user }}"

- name: Copy [vd] docker-compose setups
  shell: "cp -fr {{ vd.src }} {{ vd.dest }}/src"
  when: vd.src is defined and vd.src != ""
  become_user: "{{ vd_vagrant_user }}"

- name: Creating Vagrantfile
  template:
    src: "Vagrantfile.j2"
    dest: "{{ vd.dest }}/Vagrantfile"
    owner: "{{ vd_vagrant_user }}"

- name: Creating install.sh
  template:
    src: "install.sh.j2"
    dest: "{{ vd.dest }}/install.sh"
    owner: "{{ vd_vagrant_user }}"

- name: Creating run.sh
  template:
    src: "run.sh.j2"
    dest: "{{ vd.dest }}/run.sh"
    owner: "{{ vd_vagrant_user }}"

- name: Running vagrant
  shell: "vagrant {{ action }} {{ flags }}"
  args:
    chdir: "{{ vd.dest }}"
  vars:
    action: "{{ vd.state | default('up') }}"
    flags: "{{ '-f' if vd.state is defined and vd.state != 'up' else '' }}"
  become_user: "{{ vd_vagrant_user }}"

- name: Running VM
  include_tasks: run-vm.yml
  when: "vd.state is not defined or vd.state == 'up'"
